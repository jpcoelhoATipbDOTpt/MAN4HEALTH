[
    {
        "id": "0fda059129e02852",
        "type": "tab",
        "label": "Nodos IoT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5c6a29e227bdda77",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0001/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 520,
        "wires": [
            [
                "06494152f5e203fd",
                "c77571920dce2389"
            ]
        ]
    },
    {
        "id": "79f144ff7eadaf20",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "A1_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 340,
        "wires": []
    },
    {
        "id": "ecdbc669647b1bd0",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "A1_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 380,
        "wires": []
    },
    {
        "id": "fad1c924418c6d4c",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "A1_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 700,
        "wires": []
    },
    {
        "id": "83433cf7c8cb710f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "A1_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 660,
        "wires": []
    },
    {
        "id": "def484e685f9ac2b",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "A1_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 420,
        "wires": []
    },
    {
        "id": "0ac4f0d1d8b6b7f9",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "A1_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 460,
        "wires": []
    },
    {
        "id": "69bf191f1821c67e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "A1_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 500,
        "wires": []
    },
    {
        "id": "ad9da5100e639af3",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 520,
        "wires": [
            [
                "2a29d77c6cf78b55"
            ]
        ]
    },
    {
        "id": "bab50a3022875049",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "A1_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 540,
        "wires": []
    },
    {
        "id": "96140b5f582c1fbf",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "A1_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 580,
        "wires": []
    },
    {
        "id": "3f2d73001bb51de8",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "A1_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 620,
        "wires": []
    },
    {
        "id": "0c25d5b28f6ea994",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0003/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 1000,
        "wires": [
            [
                "6eae511526255a33",
                "b2be833d2fe8fb6c"
            ]
        ]
    },
    {
        "id": "3ec32cdcb528fb31",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 1000,
        "wires": [
            [
                "ee08427aaa6e3f56"
            ]
        ]
    },
    {
        "id": "e6cbc9cb19da5195",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0002/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 520,
        "wires": [
            [
                "20fd8e95ddb3899d",
                "3fb171c6dc01b97d"
            ]
        ]
    },
    {
        "id": "6ab01403e8235d19",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 520,
        "wires": [
            [
                "31a4c3b4a453d148"
            ]
        ]
    },
    {
        "id": "bbe1f9b7c6de059d",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0004/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 1000,
        "wires": [
            [
                "4903a85a336bc667",
                "d346f02b0fcf1736"
            ]
        ]
    },
    {
        "id": "db46c1c6c822d768",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 1000,
        "wires": [
            [
                "5be2e4a73fa66704"
            ]
        ]
    },
    {
        "id": "278bb5a8cc447d8b",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0005/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 1520,
        "wires": [
            [
                "3c85bffe5a6ccb33",
                "146c16107461ed92"
            ]
        ]
    },
    {
        "id": "d1affca3a493650c",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 1520,
        "wires": [
            [
                "3ccf4b2012671cd5"
            ]
        ]
    },
    {
        "id": "07b51689fdc8b4b1",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0006/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 1520,
        "wires": [
            [
                "85bb2c9959ba97bb",
                "4f398e4675a8a626"
            ]
        ]
    },
    {
        "id": "950bc5aa139fb15a",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 1520,
        "wires": [
            [
                "94221932d56fb43a"
            ]
        ]
    },
    {
        "id": "7536d1e2f02f178d",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "A",
        "info": "",
        "x": 50,
        "y": 320,
        "wires": []
    },
    {
        "id": "d9138b48b18ca84a",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "B",
        "info": "",
        "x": 70,
        "y": 1920,
        "wires": []
    },
    {
        "id": "ba8d2c7c92bc8425",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0007/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 2080,
        "wires": [
            [
                "ab1144bc3517efd8",
                "beb68077364a5820"
            ]
        ]
    },
    {
        "id": "4ab5347ab4f6b56a",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 2080,
        "wires": [
            [
                "34d94301f8acbe5d"
            ]
        ]
    },
    {
        "id": "ab1144bc3517efd8",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug B1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 2040,
        "wires": []
    },
    {
        "id": "2a29d77c6cf78b55",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 1",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 695;   //you need to replace this value with Value_1\nvar verywet = 410;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 520,
        "wires": [
            [
                "79f144ff7eadaf20"
            ],
            [
                "ecdbc669647b1bd0"
            ],
            [
                "def484e685f9ac2b"
            ],
            [
                "0ac4f0d1d8b6b7f9"
            ],
            [
                "69bf191f1821c67e"
            ],
            [
                "bab50a3022875049"
            ],
            [
                "96140b5f582c1fbf"
            ],
            [
                "3f2d73001bb51de8"
            ],
            [
                "83433cf7c8cb710f"
            ],
            [
                "fad1c924418c6d4c"
            ]
        ]
    },
    {
        "id": "06494152f5e203fd",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug A1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 480,
        "wires": []
    },
    {
        "id": "20fd8e95ddb3899d",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug A2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 480,
        "wires": []
    },
    {
        "id": "31a4c3b4a453d148",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 2",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 685;   //you need to replace this value with Value_1\nvar verywet = 531;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 520,
        "wires": [
            [
                "7df267e48ea6ebc4"
            ],
            [
                "9031151214791f08"
            ],
            [
                "f2f785406bde9841"
            ],
            [
                "5e8c1215e179504c"
            ],
            [
                "40daf834ed19dacc"
            ],
            [
                "8eb9ac128fa98de5"
            ],
            [
                "67e83ed501503203"
            ],
            [
                "fbcae8c5de8b85e6"
            ],
            [
                "6a76e394db955d05"
            ]
        ]
    },
    {
        "id": "7df267e48ea6ebc4",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "A2_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 340,
        "wires": []
    },
    {
        "id": "9031151214791f08",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "A2_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 380,
        "wires": []
    },
    {
        "id": "6a76e394db955d05",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "A2_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1390,
        "y": 660,
        "wires": []
    },
    {
        "id": "f2f785406bde9841",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "A2_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 420,
        "wires": []
    },
    {
        "id": "5e8c1215e179504c",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "A2_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 460,
        "wires": []
    },
    {
        "id": "40daf834ed19dacc",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "A2_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 500,
        "wires": []
    },
    {
        "id": "8eb9ac128fa98de5",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "A2_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 540,
        "wires": []
    },
    {
        "id": "67e83ed501503203",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "A2_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 580,
        "wires": []
    },
    {
        "id": "fbcae8c5de8b85e6",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "A2_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 620,
        "wires": []
    },
    {
        "id": "bffdb846746ea1f8",
        "type": "aedes broker",
        "z": "0fda059129e02852",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 90,
        "y": 20,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "73e9b9d986206bcd",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/0184B601/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 160,
        "wires": [
            [
                "85415d37f73292b8",
                "0c4e6bd9b438403c"
            ]
        ]
    },
    {
        "id": "df2f5ff3aa45ef5b",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "Soil Moisture + pH meter",
        "info": "",
        "x": 110,
        "y": 120,
        "wires": []
    },
    {
        "id": "c53d52327073d7e6",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "ph",
        "measurement": "pH",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodo_M4H_Solar",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 530,
        "y": 20,
        "wires": []
    },
    {
        "id": "0c4e6bd9b438403c",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "5 CH Splitter",
        "func": "// @ts-ignore\n    msg1 = {};\n// @ts-ignore\n    msg2 = {};\n// @ts-ignore\n    msg3 = {};\n// @ts-ignore\n    msg4 = {};\n// @ts-ignore\n    msg5 = {};\n\n\nvar m = msg.payload //obtengo el valor del payload\nvar temp;\nvar hum;\nvar ec;\nvar ph;\nvar temp2;\n\n//-------------Soil moisture/temp/EC-------------\n\n// temperatura\nvar msbt = parseInt(m.substr(18, 2).toString(16), 16);\nvar lsbt = parseInt(m.substr(20, 2).toString(16), 16);\n\nif (m.substr(18) == \"F\") {\n    temp = ((256 * msbt + lsbt) - 65535 - 1) / 100;\n}\nelse {\n    temp = (256 * msbt + lsbt) / 100; //resultado en °C\n}\n\n//humedad\nvar msbh = parseInt(m.substr(22, 2).toString(16), 16);\nvar lsbh = parseInt(m.substr(24, 2).toString(16), 16);\nhum = (256 * msbh + lsbh) / 100; //resultado en %\n\n//EC\nvar msbec = parseInt(m.substr(26, 2).toString(16), 16);\nvar lsbec = parseInt(m.substr(28, 2).toString(16), 16);\nec = (256 * msbec + lsbec); //resultado en us/cm\n\n//------------------------------------------------\n\n//-------------PH meter/sensor-------------\n\n//temperatura\nvar msbt2 = parseInt(m.substr(30, 2).toString(16), 16);\nvar lsbt2 = parseInt(m.substr(32, 2).toString(16), 16);\ntemp2 = (256 * msbt2 + lsbt2) / 100; //resultado en °C\n\n//pH\nvar msbph = parseInt(m.substr(34, 2).toString(16), 16);\nvar lsbph = parseInt(m.substr(36, 2).toString(16), 16);\nph = (256 * msbph + lsbph) / 100;\n\n//------------------------------------------------\n\n \n    msg1.payload = ph;   \n    msg2.payload = temp2;    \n    msg3.payload = temp;\n    msg4.payload = hum;\n    msg5.payload = ec;\n\n    \nreturn [msg1, msg2, msg3, msg4, msg5];\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "c53d52327073d7e6"
            ],
            [
                "58e854d1dae39d58"
            ],
            [
                "9ff41d769e12c3bd"
            ],
            [
                "42bdb71c09e0ebb1"
            ],
            [
                "1ceede927a0ac2bb"
            ]
        ]
    },
    {
        "id": "58e854d1dae39d58",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp2",
        "measurement": "Temperatura_pH",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodo_M4H_Solar",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 530,
        "y": 60,
        "wires": []
    },
    {
        "id": "9ff41d769e12c3bd",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp1",
        "measurement": "Temperatura_suelo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodo_M4H_Solar",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "42bdb71c09e0ebb1",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "hum1",
        "measurement": "Humedad_suelo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodo_M4H_Solar",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "1ceede927a0ac2bb",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "ec",
        "measurement": "Electroconductividad_suelo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodo_M4H_Solar",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 530,
        "y": 180,
        "wires": []
    },
    {
        "id": "dcfb4f6b7fde3555",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "7ec7d206f9e3558d"
            ]
        ]
    },
    {
        "id": "324a4989e35118dd",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura,Humidade,EC,pH",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1370,
        "y": 200,
        "wires": [
            [
                "cfc747227f746908"
            ]
        ]
    },
    {
        "id": "cfc747227f746908",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1520,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7cad83f3c22d027a",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura,Humidade,EC,pH",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1370,
        "y": 240,
        "wires": [
            [
                "cfc747227f746908"
            ]
        ]
    },
    {
        "id": "68a5697d2d119b3f",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 200,
        "wires": [
            [
                "324a4989e35118dd"
            ]
        ]
    },
    {
        "id": "a29247243b89f76f",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 240,
        "wires": [
            [
                "7cad83f3c22d027a"
            ]
        ]
    },
    {
        "id": "34ead04627e4c2e1",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"Node 1_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nodo Solar/\"+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 220,
        "wires": [
            [
                "efd920979cfe6813"
            ]
        ]
    },
    {
        "id": "efd920979cfe6813",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 220,
        "wires": [
            [
                "68a5697d2d119b3f"
            ],
            [
                "a29247243b89f76f"
            ]
        ]
    },
    {
        "id": "7ec7d206f9e3558d",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp = msg.payload.Temperatura;\nvar hum = msg.payload.Humidade;\nvar ec = msg.payload.EC;\nvar ph = msg.payload.pH;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\n/*\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n*/\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\n//var fecha = dia + \"/\" + mes + \"/\" + anio;\n\n    \nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura': temp, \n    'Humidade': hum, \n    'EC': ec,\n    'pH' : ph\n    };\n\nreturn { payload: m };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 220,
        "wires": [
            [
                "34ead04627e4c2e1"
            ]
        ]
    },
    {
        "id": "75b5d52523e0dc9b",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 260,
        "wires": []
    },
    {
        "id": "85415d37f73292b8",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "prueba_temp_negativa",
        "func": "var dato={temper:\"\", humid:\"\", EC:\"\", pH:\"\"}; // crea el objeto\nvar m = msg.payload //obtengo el valor del payload\n\n//-------------Soil moisture/temp/EC-------------\n\n// temperatura\nvar msbt = parseInt(m.substr(18, 2). toString(16), 16);\nvar lsbt = parseInt(m.substr(20, 2). toString(16), 16);\n\nif(m.substr(18) == \"F\")\n{\n  dato.Temperatura = ((256*msbt+lsbt)-65535-1)/100;\n}\nelse\n{\n  dato.temper = (256*msbt+lsbt)/100; //resultado en °C\n}\n\n//Humedad\nvar msbh = parseInt(m.substr(22, 2). toString(16), 16);\nvar lsbh = parseInt(m.substr(24, 2). toString(16), 16);\ndato.humid = (256*msbh+lsbh)/100; //resultado en %\n\n//EC\nvar msbec = parseInt(m.substr(26, 2). toString(16), 16);\nvar lsbec = parseInt(m.substr(28, 2). toString(16), 16);\ndato.EC = (256*msbec+lsbec); //resultado en us/cm\n\n//------------------------------------------------\n\n//-------------PH meter/sensor-------------\n\n/*\n//temperatura\nvar msbt2 = parseInt(m.substr(30, 2). toString(16), 16);\nvar lsbt2 = parseInt(m.substr(32, 2). toString(16), 16);\ndato.temp2 = (256*msbt2+lsbt2)/100; //resultado en °C\n*/\n\n//pH\nvar msbph = parseInt(m.substr(34, 2). toString(16), 16);\nvar lsbph = parseInt(m.substr(36, 2). toString(16), 16);\ndato.pH = (256*msbph+lsbph)/100;\n\n//------------------------------------------------\n\nreturn  dato ;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 220,
        "wires": [
            [
                "75b5d52523e0dc9b",
                "dcfb4f6b7fde3555"
            ]
        ]
    },
    {
        "id": "6eae511526255a33",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug A3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 960,
        "wires": []
    },
    {
        "id": "4903a85a336bc667",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug A4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 960,
        "wires": []
    },
    {
        "id": "3c85bffe5a6ccb33",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug A5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 1480,
        "wires": []
    },
    {
        "id": "85bb2c9959ba97bb",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug A6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1480,
        "wires": []
    },
    {
        "id": "1213151bda0ac881",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "A3_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 880,
        "wires": []
    },
    {
        "id": "b1c03ac5a6a93002",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "A3_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 920,
        "wires": []
    },
    {
        "id": "2bac64a457d617ad",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "A3_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 1240,
        "wires": []
    },
    {
        "id": "480c5b646e7d146a",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "A3_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 1200,
        "wires": []
    },
    {
        "id": "bffaae7f44a2e2c9",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "A3_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 960,
        "wires": []
    },
    {
        "id": "f4080e10f060128e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "A3_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9f9e5d67e59811da",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "A3_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9f2f472a27e5e664",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "A3_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1080,
        "wires": []
    },
    {
        "id": "3b07414f979c314f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "A3_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1120,
        "wires": []
    },
    {
        "id": "42994caa7ec85822",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "A3_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ee08427aaa6e3f56",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 3",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 851;   //you need to replace this value with Value_1\nvar verywet = 478;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1000,
        "wires": [
            [
                "1213151bda0ac881"
            ],
            [
                "b1c03ac5a6a93002"
            ],
            [
                "bffaae7f44a2e2c9"
            ],
            [
                "f4080e10f060128e"
            ],
            [
                "9f9e5d67e59811da"
            ],
            [
                "9f2f472a27e5e664"
            ],
            [
                "3b07414f979c314f"
            ],
            [
                "42994caa7ec85822"
            ],
            [
                "480c5b646e7d146a"
            ],
            [
                "2bac64a457d617ad"
            ]
        ]
    },
    {
        "id": "9b4f2650f75bd996",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "A4_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 880,
        "wires": []
    },
    {
        "id": "b2a34467559afb4a",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "A4_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 920,
        "wires": []
    },
    {
        "id": "c2388c812ce46f0b",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "A4_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1390,
        "y": 1240,
        "wires": []
    },
    {
        "id": "528315ec40776490",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "A4_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 1200,
        "wires": []
    },
    {
        "id": "65d784bd4695b651",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "A4_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 960,
        "wires": []
    },
    {
        "id": "7c5e38308c6cdcbf",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "A4_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7bdd94e2d9922f78",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "A4_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d56b4063ceceab0f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "A4_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1080,
        "wires": []
    },
    {
        "id": "12a10f6dc94874de",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "A4_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f2f089ecd354c876",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "A4_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1160,
        "wires": []
    },
    {
        "id": "5be2e4a73fa66704",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 4",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 791;   //you need to replace this value with Value_1\nvar verywet = 363;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1000,
        "wires": [
            [
                "9b4f2650f75bd996"
            ],
            [
                "b2a34467559afb4a"
            ],
            [
                "65d784bd4695b651"
            ],
            [
                "7c5e38308c6cdcbf"
            ],
            [
                "7bdd94e2d9922f78"
            ],
            [
                "d56b4063ceceab0f"
            ],
            [
                "12a10f6dc94874de"
            ],
            [
                "f2f089ecd354c876"
            ],
            [
                "528315ec40776490"
            ],
            [
                "c2388c812ce46f0b"
            ]
        ]
    },
    {
        "id": "f95887194c8fff26",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "A5_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ed730be641667338",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "A5_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3f9320a225e15794",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "A5_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 1760,
        "wires": []
    },
    {
        "id": "00d3c224f52d018f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "A5_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 1720,
        "wires": []
    },
    {
        "id": "80e581d458bd60aa",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "A5_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 1480,
        "wires": []
    },
    {
        "id": "cbd3f22441f3d2cc",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "A5_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 1520,
        "wires": []
    },
    {
        "id": "cd4f8eeebdb0b41b",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "A5_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1560,
        "wires": []
    },
    {
        "id": "688e42cedfe75542",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "A5_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1600,
        "wires": []
    },
    {
        "id": "099b14510f55296d",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "A5_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1640,
        "wires": []
    },
    {
        "id": "3432c5b042258c2d",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "A5_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 1680,
        "wires": []
    },
    {
        "id": "3ccf4b2012671cd5",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 5",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 721;   //you need to replace this value with Value_1\nvar verywet = 522;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1520,
        "wires": [
            [
                "f95887194c8fff26"
            ],
            [
                "ed730be641667338"
            ],
            [
                "80e581d458bd60aa"
            ],
            [
                "cbd3f22441f3d2cc"
            ],
            [
                "cd4f8eeebdb0b41b"
            ],
            [
                "688e42cedfe75542"
            ],
            [
                "099b14510f55296d"
            ],
            [
                "3432c5b042258c2d"
            ],
            [
                "00d3c224f52d018f"
            ],
            [
                "3f9320a225e15794"
            ]
        ]
    },
    {
        "id": "6e063fe19dc1cc14",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "A6_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 1400,
        "wires": []
    },
    {
        "id": "bcaa90bd324998e8",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "A6_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1440,
        "wires": []
    },
    {
        "id": "7609d71afedf0826",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "A6_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1390,
        "y": 1760,
        "wires": []
    },
    {
        "id": "73debb5b54a6b314",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "A6_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 1720,
        "wires": []
    },
    {
        "id": "08e1dea92c489cc7",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "A6_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 1480,
        "wires": []
    },
    {
        "id": "1eccb26ba90166be",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "A6_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 1520,
        "wires": []
    },
    {
        "id": "68bf8cebafe3b979",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "A6_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1560,
        "wires": []
    },
    {
        "id": "3ddbae817e2d666b",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "A6_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1600,
        "wires": []
    },
    {
        "id": "f305766701ef53b4",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "A6_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1640,
        "wires": []
    },
    {
        "id": "e48d74f6c1b9cb63",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "A6_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_A",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 1680,
        "wires": []
    },
    {
        "id": "94221932d56fb43a",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 6",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 793;   //you need to replace this value with Value_1\nvar verywet = 374;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1520,
        "wires": [
            [
                "6e063fe19dc1cc14"
            ],
            [
                "bcaa90bd324998e8"
            ],
            [
                "08e1dea92c489cc7"
            ],
            [
                "1eccb26ba90166be"
            ],
            [
                "68bf8cebafe3b979"
            ],
            [
                "3ddbae817e2d666b"
            ],
            [
                "f305766701ef53b4"
            ],
            [
                "e48d74f6c1b9cb63"
            ],
            [
                "73debb5b54a6b314"
            ],
            [
                "7609d71afedf0826"
            ]
        ]
    },
    {
        "id": "95ba2fa066bc97fd",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0008/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 2080,
        "wires": [
            [
                "e9223a39d0392dde",
                "a8e5344e93f7090c"
            ]
        ]
    },
    {
        "id": "f4230d44417ddfb4",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 2080,
        "wires": [
            [
                "4de129bb12892bd5"
            ]
        ]
    },
    {
        "id": "e9223a39d0392dde",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug B2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 2040,
        "wires": []
    },
    {
        "id": "5e44ccf7debf5f4e",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 2580,
        "wires": [
            [
                "afb48e43c0510f73"
            ]
        ]
    },
    {
        "id": "22ff6b80488185a5",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug B3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 2620,
        "wires": []
    },
    {
        "id": "14c97906ccb4f8e7",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0010/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 2580,
        "wires": [
            [
                "1316d963388b8ed7",
                "0c897ef8fc21681b"
            ]
        ]
    },
    {
        "id": "29c977fae837685a",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 2580,
        "wires": [
            [
                "27623ef292d70872"
            ]
        ]
    },
    {
        "id": "1316d963388b8ed7",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug B4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 2540,
        "wires": []
    },
    {
        "id": "9435707799235c41",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0009/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 2580,
        "wires": [
            [
                "22ff6b80488185a5",
                "32affe87b658fa8f"
            ]
        ]
    },
    {
        "id": "6fbabfa0ad00eb3f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "B1_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 1960,
        "wires": []
    },
    {
        "id": "5b4c45e6dbb39f15",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "B1_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2000,
        "wires": []
    },
    {
        "id": "c21771db23afb483",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "B1_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 2320,
        "wires": []
    },
    {
        "id": "563535501ddffbaa",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "B1_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 2280,
        "wires": []
    },
    {
        "id": "77e4829a4f312ddf",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "B1_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 2040,
        "wires": []
    },
    {
        "id": "faa8ad3217c41dfe",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "B1_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 2080,
        "wires": []
    },
    {
        "id": "0b3ac0951533fa44",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "B1_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2120,
        "wires": []
    },
    {
        "id": "36a467a41f325e93",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "B1_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2160,
        "wires": []
    },
    {
        "id": "aabf67338d931c61",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "B1_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2200,
        "wires": []
    },
    {
        "id": "1e8afba6e53bdda6",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "B1_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2240,
        "wires": []
    },
    {
        "id": "34d94301f8acbe5d",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 7",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 695;   //you need to replace this value with Value_1\nvar verywet = 247;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2080,
        "wires": [
            [
                "6fbabfa0ad00eb3f"
            ],
            [
                "5b4c45e6dbb39f15"
            ],
            [
                "77e4829a4f312ddf"
            ],
            [
                "faa8ad3217c41dfe"
            ],
            [
                "0b3ac0951533fa44"
            ],
            [
                "36a467a41f325e93"
            ],
            [
                "aabf67338d931c61"
            ],
            [
                "1e8afba6e53bdda6"
            ],
            [
                "563535501ddffbaa"
            ],
            [
                "c21771db23afb483"
            ]
        ]
    },
    {
        "id": "c2e728a4a66c5688",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "B2_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 1960,
        "wires": []
    },
    {
        "id": "664efcdd35635f1d",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "B2_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 2000,
        "wires": []
    },
    {
        "id": "d3446e447d0bd7dd",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "B2_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1390,
        "y": 2320,
        "wires": []
    },
    {
        "id": "36c19938f1c0fbbb",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "B2_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 2280,
        "wires": []
    },
    {
        "id": "99fb9f933e3e8664",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "B2_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 2040,
        "wires": []
    },
    {
        "id": "9f95e6c7587d7ca5",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "B2_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 2080,
        "wires": []
    },
    {
        "id": "0696e328e3c3b716",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "B2_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 2120,
        "wires": []
    },
    {
        "id": "dacebdaf84ee7a7e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "B2_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 2160,
        "wires": []
    },
    {
        "id": "0eb7b1ec76b03e72",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "B2_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 2200,
        "wires": []
    },
    {
        "id": "3114b99ce1ce8c32",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "B2_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1360,
        "y": 2240,
        "wires": []
    },
    {
        "id": "4de129bb12892bd5",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 8",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 697;   //you need to replace this value with Value_1\nvar verywet = 541;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2080,
        "wires": [
            [
                "c2e728a4a66c5688"
            ],
            [
                "664efcdd35635f1d"
            ],
            [
                "99fb9f933e3e8664"
            ],
            [
                "9f95e6c7587d7ca5"
            ],
            [
                "0696e328e3c3b716"
            ],
            [
                "dacebdaf84ee7a7e"
            ],
            [
                "0eb7b1ec76b03e72"
            ],
            [
                "3114b99ce1ce8c32"
            ],
            [
                "36c19938f1c0fbbb"
            ],
            [
                "d3446e447d0bd7dd"
            ]
        ]
    },
    {
        "id": "e2efdddad306413d",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "B3_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 2460,
        "wires": []
    },
    {
        "id": "95015d6d2b4bbdce",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "B3_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2500,
        "wires": []
    },
    {
        "id": "6acbf03c40e27747",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "B3_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 2820,
        "wires": []
    },
    {
        "id": "01b867d23730b7fd",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "B3_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 2780,
        "wires": []
    },
    {
        "id": "e32c595065f499e9",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "B3_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 2540,
        "wires": []
    },
    {
        "id": "a75ef7d3479de3f1",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "B3_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 2580,
        "wires": []
    },
    {
        "id": "09986bf5dea78ae7",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "B3_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2620,
        "wires": []
    },
    {
        "id": "67d6d9b86caefad8",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "B3_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2660,
        "wires": []
    },
    {
        "id": "55ef79666ca1f862",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "B3_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2700,
        "wires": []
    },
    {
        "id": "1acb3924c1f44b0e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "B3_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 2740,
        "wires": []
    },
    {
        "id": "afb48e43c0510f73",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 9",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 703;   //you need to replace this value with Value_1\nvar verywet = 343;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2580,
        "wires": [
            [
                "e2efdddad306413d"
            ],
            [
                "95015d6d2b4bbdce"
            ],
            [
                "e32c595065f499e9"
            ],
            [
                "a75ef7d3479de3f1"
            ],
            [
                "09986bf5dea78ae7"
            ],
            [
                "67d6d9b86caefad8"
            ],
            [
                "55ef79666ca1f862"
            ],
            [
                "1acb3924c1f44b0e"
            ],
            [
                "01b867d23730b7fd"
            ],
            [
                "6acbf03c40e27747"
            ]
        ]
    },
    {
        "id": "407d8bed03ef034c",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "B4_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1390,
        "y": 2460,
        "wires": []
    },
    {
        "id": "dffa5bf710e60c2f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "B4_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 2500,
        "wires": []
    },
    {
        "id": "dc1d9f8b80ac46a5",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "B4_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1410,
        "y": 2820,
        "wires": []
    },
    {
        "id": "eba675f02feb0818",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "lux",
        "measurement": "B4_Lux",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 2780,
        "wires": []
    },
    {
        "id": "4758bb0b42c1597c",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "B4_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 2540,
        "wires": []
    },
    {
        "id": "375ec26bb9f3dd74",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "B4_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 2580,
        "wires": []
    },
    {
        "id": "3a8771fc05a74742",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "B4_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 2620,
        "wires": []
    },
    {
        "id": "d41655c16966ddf2",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "B4_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 2660,
        "wires": []
    },
    {
        "id": "e4adae14063f341f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "B4_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 2700,
        "wires": []
    },
    {
        "id": "25ac2b62c34a33be",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "B4_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 2740,
        "wires": []
    },
    {
        "id": "27623ef292d70872",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 10",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg9 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 691;   //you need to replace this value with Value_1\nvar verywet = 262;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg9.payload = msg.payload.zb; //lux\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2580,
        "wires": [
            [
                "407d8bed03ef034c"
            ],
            [
                "dffa5bf710e60c2f"
            ],
            [
                "4758bb0b42c1597c"
            ],
            [
                "375ec26bb9f3dd74"
            ],
            [
                "3a8771fc05a74742"
            ],
            [
                "d41655c16966ddf2"
            ],
            [
                "e4adae14063f341f"
            ],
            [
                "25ac2b62c34a33be"
            ],
            [
                "eba675f02feb0818"
            ],
            [
                "dc1d9f8b80ac46a5"
            ]
        ]
    },
    {
        "id": "4f5c777b10543d84",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "A1",
        "info": "",
        "x": 70,
        "y": 480,
        "wires": []
    },
    {
        "id": "4ad20ba35bc01f66",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "A2",
        "info": "",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "53166de1e395e0e9",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "A3",
        "info": "",
        "x": 70,
        "y": 960,
        "wires": []
    },
    {
        "id": "1c972400493af250",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "A4",
        "info": "",
        "x": 830,
        "y": 960,
        "wires": []
    },
    {
        "id": "a137225625533181",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "A5",
        "info": "",
        "x": 70,
        "y": 1480,
        "wires": []
    },
    {
        "id": "6883af4d263df65d",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "A6",
        "info": "",
        "x": 830,
        "y": 1480,
        "wires": []
    },
    {
        "id": "74a481a8f5b72210",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "B1",
        "info": "",
        "x": 70,
        "y": 2040,
        "wires": []
    },
    {
        "id": "0fdc7d85c98eb46f",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "B2",
        "info": "",
        "x": 830,
        "y": 2040,
        "wires": []
    },
    {
        "id": "2838737cf5c68a77",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "B3",
        "info": "",
        "x": 70,
        "y": 2540,
        "wires": []
    },
    {
        "id": "8473923d858ed878",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "B4",
        "info": "",
        "x": 830,
        "y": 2540,
        "wires": []
    },
    {
        "id": "c77571920dce2389",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 130,
        "y": 580,
        "wires": [
            [
                "21f4e00eb24758e1"
            ]
        ]
    },
    {
        "id": "21f4e00eb24758e1",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 695;   //you need to replace this value with Value_1\nvar verywet = 410;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 640,
        "wires": [
            [
                "2f19536be1ddf8c2"
            ]
        ]
    },
    {
        "id": "2f19536be1ddf8c2",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"A1_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 700,
        "wires": [
            [
                "7a89b7f3da7a7da5"
            ]
        ]
    },
    {
        "id": "7a89b7f3da7a7da5",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 110,
        "y": 780,
        "wires": [
            [
                "eab2898a9498bcdc"
            ],
            [
                "4e39c04fc425dbef"
            ]
        ]
    },
    {
        "id": "4e39c04fc425dbef",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 800,
        "wires": [
            [
                "70c8872309f4cfcd"
            ]
        ]
    },
    {
        "id": "eab2898a9498bcdc",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 760,
        "wires": [
            [
                "60f51b6bbe1d68ec"
            ]
        ]
    },
    {
        "id": "087da69f9874848c",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 560,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "abea2c3146d7b301",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 1300,
        "wires": [
            [
                "052e4f95b77429f9"
            ],
            [
                "b7bf3dbee6b7aa7a"
            ]
        ]
    },
    {
        "id": "b7bf3dbee6b7aa7a",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1320,
        "wires": [
            [
                "6e22ce1d1c8d29a2"
            ]
        ]
    },
    {
        "id": "052e4f95b77429f9",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1280,
        "wires": [
            [
                "43444350e2519433"
            ]
        ]
    },
    {
        "id": "eb3e922062da8181",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "1f6bf230e9ea78fc",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"A3_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 1220,
        "wires": [
            [
                "abea2c3146d7b301"
            ]
        ]
    },
    {
        "id": "e9c29546605ebf39",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 851;   //you need to replace this value with Value_1\nvar verywet = 478;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1160,
        "wires": [
            [
                "1f6bf230e9ea78fc"
            ]
        ]
    },
    {
        "id": "b2be833d2fe8fb6c",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 1100,
        "wires": [
            [
                "e9c29546605ebf39"
            ]
        ]
    },
    {
        "id": "146c16107461ed92",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 1620,
        "wires": [
            [
                "c9e7e7198e7cb640"
            ]
        ]
    },
    {
        "id": "c9e7e7198e7cb640",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 721;   //you need to replace this value with Value_1\nvar verywet = 522;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1680,
        "wires": [
            [
                "ec39160bbddfbe7d"
            ]
        ]
    },
    {
        "id": "ec39160bbddfbe7d",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"A5_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 1740,
        "wires": [
            [
                "39ca81b4746e364f"
            ]
        ]
    },
    {
        "id": "39ca81b4746e364f",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 1820,
        "wires": [
            [
                "618d79564a304249"
            ],
            [
                "31ea6221c27d4610"
            ]
        ]
    },
    {
        "id": "618d79564a304249",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1800,
        "wires": [
            [
                "3e1859acd21ba9f3"
            ]
        ]
    },
    {
        "id": "31ea6221c27d4610",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1840,
        "wires": [
            [
                "5ca4d58ec470390f"
            ]
        ]
    },
    {
        "id": "577a7cf013c1e141",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "beb68077364a5820",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 2180,
        "wires": [
            [
                "78ac2b0ad49300e7"
            ]
        ]
    },
    {
        "id": "78ac2b0ad49300e7",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 695;   //you need to replace this value with Value_1\nvar verywet = 247;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 2240,
        "wires": [
            [
                "11613b21968a179d"
            ]
        ]
    },
    {
        "id": "11613b21968a179d",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"B1_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 2300,
        "wires": [
            [
                "fd24a902f98fa93b"
            ]
        ]
    },
    {
        "id": "fd24a902f98fa93b",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 2380,
        "wires": [
            [
                "c47dc3d078380aed"
            ],
            [
                "f40ecdbccf51a814"
            ]
        ]
    },
    {
        "id": "c47dc3d078380aed",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 2360,
        "wires": [
            [
                "0f6c311e25f059ee"
            ]
        ]
    },
    {
        "id": "f40ecdbccf51a814",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 2400,
        "wires": [
            [
                "d7dbf212864ec0be"
            ]
        ]
    },
    {
        "id": "98013d683b691a0b",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "32affe87b658fa8f",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 2680,
        "wires": [
            [
                "a64e6af19d4841de"
            ]
        ]
    },
    {
        "id": "a64e6af19d4841de",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 703;   //you need to replace this value with Value_1\nvar verywet = 343;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 2740,
        "wires": [
            [
                "a7a143bebd0e49db"
            ]
        ]
    },
    {
        "id": "a7a143bebd0e49db",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"B3_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 2800,
        "wires": [
            [
                "93667d1ffd601167"
            ]
        ]
    },
    {
        "id": "93667d1ffd601167",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 2880,
        "wires": [
            [
                "79243eebde6fc4ed"
            ],
            [
                "912dedfd223847ba"
            ]
        ]
    },
    {
        "id": "79243eebde6fc4ed",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 2860,
        "wires": [
            [
                "0b594bc270cc6f25"
            ]
        ]
    },
    {
        "id": "912dedfd223847ba",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 2900,
        "wires": [
            [
                "a15ca1368fc463f5"
            ]
        ]
    },
    {
        "id": "988a572e3311dcd4",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "3fb171c6dc01b97d",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 580,
        "wires": [
            [
                "b96b043c4b9b91ac"
            ]
        ]
    },
    {
        "id": "b96b043c4b9b91ac",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 685;   //you need to replace this value with Value_1\nvar verywet = 531;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 640,
        "wires": [
            [
                "b6f889fbcad6a93d"
            ]
        ]
    },
    {
        "id": "b6f889fbcad6a93d",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"A3_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 700,
        "wires": [
            [
                "cfdb6d5c74168585"
            ]
        ]
    },
    {
        "id": "cfdb6d5c74168585",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 780,
        "wires": [
            [
                "1e08a45a59795d60"
            ],
            [
                "13a81c5e280e5c68"
            ]
        ]
    },
    {
        "id": "1e08a45a59795d60",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 760,
        "wires": [
            [
                "e24007de2ee9ba27"
            ]
        ]
    },
    {
        "id": "13a81c5e280e5c68",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 800,
        "wires": [
            [
                "f95a18750140ff01"
            ]
        ]
    },
    {
        "id": "f95a18750140ff01",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1230,
        "y": 800,
        "wires": [
            [
                "8941b5de91edf27f"
            ]
        ]
    },
    {
        "id": "e24007de2ee9ba27",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1230,
        "y": 760,
        "wires": [
            [
                "8941b5de91edf27f"
            ]
        ]
    },
    {
        "id": "8941b5de91edf27f",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1360,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "6e22ce1d1c8d29a2",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 1320,
        "wires": [
            [
                "eb3e922062da8181"
            ]
        ]
    },
    {
        "id": "43444350e2519433",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 1280,
        "wires": [
            [
                "eb3e922062da8181"
            ]
        ]
    },
    {
        "id": "5ca4d58ec470390f",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 1840,
        "wires": [
            [
                "577a7cf013c1e141"
            ]
        ]
    },
    {
        "id": "3e1859acd21ba9f3",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 1800,
        "wires": [
            [
                "577a7cf013c1e141"
            ]
        ]
    },
    {
        "id": "d7dbf212864ec0be",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 2400,
        "wires": [
            [
                "98013d683b691a0b"
            ]
        ]
    },
    {
        "id": "0f6c311e25f059ee",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 2360,
        "wires": [
            [
                "98013d683b691a0b"
            ]
        ]
    },
    {
        "id": "a15ca1368fc463f5",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 2900,
        "wires": [
            [
                "988a572e3311dcd4"
            ]
        ]
    },
    {
        "id": "0b594bc270cc6f25",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 2860,
        "wires": [
            [
                "988a572e3311dcd4"
            ]
        ]
    },
    {
        "id": "70c8872309f4cfcd",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 430,
        "y": 800,
        "wires": [
            [
                "087da69f9874848c"
            ]
        ]
    },
    {
        "id": "60f51b6bbe1d68ec",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 430,
        "y": 760,
        "wires": [
            [
                "087da69f9874848c"
            ]
        ]
    },
    {
        "id": "d346f02b0fcf1736",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1100,
        "wires": [
            [
                "539d1842b2d4d62b"
            ]
        ]
    },
    {
        "id": "539d1842b2d4d62b",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 791;   //you need to replace this value with Value_1\nvar verywet = 363;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1160,
        "wires": [
            [
                "ee03b86bc49a076e"
            ]
        ]
    },
    {
        "id": "ee03b86bc49a076e",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"A4_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1220,
        "wires": [
            [
                "a81a0858ed40066f"
            ]
        ]
    },
    {
        "id": "a81a0858ed40066f",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 1300,
        "wires": [
            [
                "efef8c7ebcbe8e10"
            ],
            [
                "c387708a1ece415a"
            ]
        ]
    },
    {
        "id": "efef8c7ebcbe8e10",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1280,
        "wires": [
            [
                "7df26885baa89dd2"
            ]
        ]
    },
    {
        "id": "c387708a1ece415a",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "42f290b6b98bd7f3"
            ]
        ]
    },
    {
        "id": "42f290b6b98bd7f3",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 1320,
        "wires": [
            [
                "826effa1396a4846"
            ]
        ]
    },
    {
        "id": "7df26885baa89dd2",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 1280,
        "wires": [
            [
                "826effa1396a4846"
            ]
        ]
    },
    {
        "id": "826effa1396a4846",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "4f398e4675a8a626",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1620,
        "wires": [
            [
                "16518a5b995644b9"
            ]
        ]
    },
    {
        "id": "16518a5b995644b9",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 793;   //you need to replace this value with Value_1\nvar verywet = 374;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1680,
        "wires": [
            [
                "dc9e4cb0644b77ed"
            ]
        ]
    },
    {
        "id": "dc9e4cb0644b77ed",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"A6_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1740,
        "wires": [
            [
                "9da4165ec94cdc1d"
            ]
        ]
    },
    {
        "id": "9da4165ec94cdc1d",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 1820,
        "wires": [
            [
                "713805beab10becb"
            ],
            [
                "d7e24c3cca12c0d3"
            ]
        ]
    },
    {
        "id": "713805beab10becb",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "0cb270e6f46c08c6"
            ]
        ]
    },
    {
        "id": "d7e24c3cca12c0d3",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "2ac4dbd25808e94b"
            ]
        ]
    },
    {
        "id": "2ac4dbd25808e94b",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 1840,
        "wires": [
            [
                "87b6d0219689dcd8"
            ]
        ]
    },
    {
        "id": "0cb270e6f46c08c6",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 1800,
        "wires": [
            [
                "87b6d0219689dcd8"
            ]
        ]
    },
    {
        "id": "87b6d0219689dcd8",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "a8e5344e93f7090c",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 2180,
        "wires": [
            [
                "cb12cd3471d53c13"
            ]
        ]
    },
    {
        "id": "cb12cd3471d53c13",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 697;   //you need to replace this value with Value_1\nvar verywet = 541;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2240,
        "wires": [
            [
                "ef8935d426ac6c19"
            ]
        ]
    },
    {
        "id": "ef8935d426ac6c19",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"B2_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2300,
        "wires": [
            [
                "105d651387061c6c"
            ]
        ]
    },
    {
        "id": "105d651387061c6c",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 2380,
        "wires": [
            [
                "d1df1b132e0ae1b3"
            ],
            [
                "3249aed65ad90fbb"
            ]
        ]
    },
    {
        "id": "d1df1b132e0ae1b3",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 2360,
        "wires": [
            [
                "4057df369f64007d"
            ]
        ]
    },
    {
        "id": "3249aed65ad90fbb",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 2400,
        "wires": [
            [
                "c4fefdcd31d19abd"
            ]
        ]
    },
    {
        "id": "c4fefdcd31d19abd",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 2400,
        "wires": [
            [
                "e0c3c6a8bb609ea6"
            ]
        ]
    },
    {
        "id": "4057df369f64007d",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 2360,
        "wires": [
            [
                "e0c3c6a8bb609ea6"
            ]
        ]
    },
    {
        "id": "e0c3c6a8bb609ea6",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "0c897ef8fc21681b",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 2680,
        "wires": [
            [
                "267361b2e0299aa3"
            ]
        ]
    },
    {
        "id": "267361b2e0299aa3",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar luximetro = msg.payload.zb;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 691;   //you need to replace this value with Value_1\nvar verywet = 262;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Intensidade luminosa (lux)' : luximetro,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2740,
        "wires": [
            [
                "efd66a86c64a6644"
            ]
        ]
    },
    {
        "id": "efd66a86c64a6644",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"B4_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2800,
        "wires": [
            [
                "af236515aae1b239"
            ]
        ]
    },
    {
        "id": "af236515aae1b239",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 2880,
        "wires": [
            [
                "033e8820f3e426db"
            ],
            [
                "fb4d110845247394"
            ]
        ]
    },
    {
        "id": "033e8820f3e426db",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 2860,
        "wires": [
            [
                "ea304f467f841c32"
            ]
        ]
    },
    {
        "id": "fb4d110845247394",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 2900,
        "wires": [
            [
                "8d03f2f601be464f"
            ]
        ]
    },
    {
        "id": "8d03f2f601be464f",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 2900,
        "wires": [
            [
                "d7a2197b1d754bbd"
            ]
        ]
    },
    {
        "id": "ea304f467f841c32",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Intensidade luminosa (lux),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 2860,
        "wires": [
            [
                "d7a2197b1d754bbd"
            ]
        ]
    },
    {
        "id": "d7a2197b1d754bbd",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "7810206e25bd3ff4",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 3080,
        "wires": [
            [
                "26d421dc8e6286b3"
            ]
        ]
    },
    {
        "id": "fcb6c63893d09135",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug B5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 3040,
        "wires": []
    },
    {
        "id": "7f121aa2e11126af",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0012/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 3080,
        "wires": [
            [
                "eee590d327c8ebbd",
                "3e8634a1698e1241"
            ]
        ]
    },
    {
        "id": "0be5959c91395357",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0010/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 3080,
        "wires": [
            [
                "fcb6c63893d09135",
                "46a994f70349db65"
            ]
        ]
    },
    {
        "id": "2bddf918431a31b0",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "B5_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 3220,
        "wires": []
    },
    {
        "id": "b3d7f1026b2485c4",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "B5_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 2980,
        "wires": []
    },
    {
        "id": "5287b516cdaf1279",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "B5_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3020,
        "wires": []
    },
    {
        "id": "bd54df40386e48fe",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "B5_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 3060,
        "wires": []
    },
    {
        "id": "858b0e94f1fe874a",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "B5_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3100,
        "wires": []
    },
    {
        "id": "0fb130021ff10e69",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "B5_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3140,
        "wires": []
    },
    {
        "id": "52f3e7373b1639e9",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "B5_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3180,
        "wires": []
    },
    {
        "id": "26d421dc8e6286b3",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 11",
        "func": "// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 624;   //you need to replace this value with Value_1\nvar verywet = 359;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg3, msg4, msg5, msg6, msg7, msg8, msg10];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 3080,
        "wires": [
            [
                "b3d7f1026b2485c4"
            ],
            [
                "5287b516cdaf1279"
            ],
            [
                "bd54df40386e48fe"
            ],
            [
                "858b0e94f1fe874a"
            ],
            [
                "0fb130021ff10e69"
            ],
            [
                "52f3e7373b1639e9"
            ],
            [
                "2bddf918431a31b0"
            ]
        ]
    },
    {
        "id": "b9c20f967e890214",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "B6_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1410,
        "y": 3220,
        "wires": []
    },
    {
        "id": "dc6e881034455a43",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "B6_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 2980,
        "wires": []
    },
    {
        "id": "f1c9e69892718d2c",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "B6_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 3020,
        "wires": []
    },
    {
        "id": "c734e88657324d88",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "B6_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 3060,
        "wires": []
    },
    {
        "id": "e915a5574c28a10d",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "B6_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 3100,
        "wires": []
    },
    {
        "id": "250187ca23f32964",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "B6_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 3140,
        "wires": []
    },
    {
        "id": "fb6d66fbdaccbe35",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "B6_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_B",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 3180,
        "wires": []
    },
    {
        "id": "9b028e2b33ad06b2",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "B5",
        "info": "",
        "x": 70,
        "y": 3040,
        "wires": []
    },
    {
        "id": "a43d645dac2d4179",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "B6",
        "info": "",
        "x": 830,
        "y": 3040,
        "wires": []
    },
    {
        "id": "46a994f70349db65",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 3140,
        "wires": [
            [
                "1bd58937a35ce12c"
            ]
        ]
    },
    {
        "id": "1bd58937a35ce12c",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 624;   //you need to replace this value with Value_1\nvar verywet = 359;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 3200,
        "wires": [
            [
                "ea0d82f6bcc56728"
            ]
        ]
    },
    {
        "id": "ea0d82f6bcc56728",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"B5_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 3260,
        "wires": [
            [
                "2f88ac4d0c99aa5d"
            ]
        ]
    },
    {
        "id": "2f88ac4d0c99aa5d",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 3340,
        "wires": [
            [
                "ba5833645438fb15"
            ],
            [
                "69b71dfce0c5356d"
            ]
        ]
    },
    {
        "id": "ba5833645438fb15",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 3320,
        "wires": [
            [
                "1c5ab64102e86437"
            ]
        ]
    },
    {
        "id": "69b71dfce0c5356d",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 3360,
        "wires": [
            [
                "dd06343ca8e77708"
            ]
        ]
    },
    {
        "id": "957871b98d620141",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "dd06343ca8e77708",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 3360,
        "wires": [
            [
                "957871b98d620141"
            ]
        ]
    },
    {
        "id": "1c5ab64102e86437",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 3320,
        "wires": [
            [
                "957871b98d620141"
            ]
        ]
    },
    {
        "id": "5c0504db1241e2c7",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "C1",
        "info": "",
        "x": 70,
        "y": 3540,
        "wires": []
    },
    {
        "id": "476ee13f23a0158c",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "C2",
        "info": "",
        "x": 830,
        "y": 3540,
        "wires": []
    },
    {
        "id": "33b8a6d6eb1c2c16",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "C3",
        "info": "",
        "x": 70,
        "y": 4000,
        "wires": []
    },
    {
        "id": "606f7a63d8b95bee",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "C4",
        "info": "",
        "x": 830,
        "y": 4000,
        "wires": []
    },
    {
        "id": "fde066a0959b0bb9",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 4520,
        "wires": [
            [
                "0809ccc7ab372dde"
            ]
        ]
    },
    {
        "id": "7465deb2feee906c",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug C5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 4480,
        "wires": []
    },
    {
        "id": "7f57c39621fe51d9",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0017/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 4520,
        "wires": [
            [
                "7465deb2feee906c",
                "61c1e33e419bf995"
            ]
        ]
    },
    {
        "id": "5e4cb02b6c25b83e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temperatura",
        "measurement": "C5_temperatura",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 4400,
        "wires": []
    },
    {
        "id": "991a79bf26a4423d",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad",
        "measurement": "C5_Humidade",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 4440,
        "wires": []
    },
    {
        "id": "8ef63cbe60a9e9cf",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "C5_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 4720,
        "wires": []
    },
    {
        "id": "2eb82fc4fbfa396f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "C5_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 4480,
        "wires": []
    },
    {
        "id": "217434f6c5f9a47e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "C5_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 4520,
        "wires": []
    },
    {
        "id": "d41ec3e1a29102f5",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "C5_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 4560,
        "wires": []
    },
    {
        "id": "443b4e7a2664ded3",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "C5_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 4600,
        "wires": []
    },
    {
        "id": "bdae0675d3e702a5",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "C5_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 4640,
        "wires": []
    },
    {
        "id": "98727c08a6ab0db2",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "C5_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 4680,
        "wires": []
    },
    {
        "id": "0809ccc7ab372dde",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 17",
        "func": "// @ts-ignore\nmsg1 = {};\n// @ts-ignore\nmsg2 = {};\n// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 639;   //you need to replace this value with Value_1\nvar verywet = 391;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg1.payload = msg.payload.al; //temp aire\nmsg2.payload = msg.payload.ax; //hum aire\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg10];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 4520,
        "wires": [
            [
                "5e4cb02b6c25b83e"
            ],
            [
                "991a79bf26a4423d"
            ],
            [
                "2eb82fc4fbfa396f"
            ],
            [
                "217434f6c5f9a47e"
            ],
            [
                "d41ec3e1a29102f5"
            ],
            [
                "443b4e7a2664ded3"
            ],
            [
                "bdae0675d3e702a5"
            ],
            [
                "98727c08a6ab0db2"
            ],
            [
                "8ef63cbe60a9e9cf"
            ]
        ]
    },
    {
        "id": "3ddb1673e350e49f",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "C5",
        "info": "",
        "x": 70,
        "y": 4480,
        "wires": []
    },
    {
        "id": "61c1e33e419bf995",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 4620,
        "wires": [
            [
                "0de695e776db05b0"
            ]
        ]
    },
    {
        "id": "0de695e776db05b0",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_aire = msg.payload.al;\nvar hum_aire = msg.payload.ax;\nvar temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 639;   //you need to replace this value with Value_1\nvar verywet = 391;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Ar (ºC)': temp_aire, \n    'Humidade do Ar (%)': hum_aire, \n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 4680,
        "wires": [
            [
                "9ce215d6b8239bd3"
            ]
        ]
    },
    {
        "id": "9ce215d6b8239bd3",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"C5_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 4740,
        "wires": [
            [
                "eb95fea79a1deb75"
            ]
        ]
    },
    {
        "id": "eb95fea79a1deb75",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 4820,
        "wires": [
            [
                "3ce5280dccf7e954"
            ],
            [
                "3820c1e1594c86a3"
            ]
        ]
    },
    {
        "id": "3ce5280dccf7e954",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 4800,
        "wires": [
            [
                "171ad15670d81326"
            ]
        ]
    },
    {
        "id": "3820c1e1594c86a3",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 4840,
        "wires": [
            [
                "2fc46058c100a1ee"
            ]
        ]
    },
    {
        "id": "63d5c1ccbf606cfe",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 4820,
        "wires": [
            []
        ]
    },
    {
        "id": "2fc46058c100a1ee",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 4840,
        "wires": [
            [
                "63d5c1ccbf606cfe"
            ]
        ]
    },
    {
        "id": "171ad15670d81326",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Ar (ºC),Humidade do Ar (%), Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 4800,
        "wires": [
            [
                "63d5c1ccbf606cfe"
            ]
        ]
    },
    {
        "id": "8987771749662e7b",
        "type": "comment",
        "z": "0fda059129e02852",
        "name": "C",
        "info": "",
        "x": 70,
        "y": 3420,
        "wires": []
    },
    {
        "id": "31058c77b70a6b5e",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 3080,
        "wires": [
            [
                "695929f3135e8d01"
            ]
        ]
    },
    {
        "id": "3e8634a1698e1241",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug B6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 3040,
        "wires": []
    },
    {
        "id": "695929f3135e8d01",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 12",
        "func": "// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 620;   //you need to replace this value with Value_1\nvar verywet = 356;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg3, msg4, msg5, msg6, msg7, msg8, msg10];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3080,
        "wires": [
            [
                "dc6e881034455a43"
            ],
            [
                "f1c9e69892718d2c"
            ],
            [
                "c734e88657324d88"
            ],
            [
                "e915a5574c28a10d"
            ],
            [
                "250187ca23f32964"
            ],
            [
                "fb6d66fbdaccbe35"
            ],
            [
                "b9c20f967e890214"
            ]
        ]
    },
    {
        "id": "23164196d7328632",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 3320,
        "wires": [
            [
                "f11675b7a7cf09f1"
            ]
        ]
    },
    {
        "id": "33c2007f97463dc0",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 3360,
        "wires": [
            [
                "2cdb1b236763f615"
            ]
        ]
    },
    {
        "id": "4bc4a49702a2e264",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "2cdb1b236763f615",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 3360,
        "wires": [
            [
                "4bc4a49702a2e264"
            ]
        ]
    },
    {
        "id": "f11675b7a7cf09f1",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 3320,
        "wires": [
            [
                "4bc4a49702a2e264"
            ]
        ]
    },
    {
        "id": "a1e2aa94c3c78002",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 3340,
        "wires": [
            [
                "23164196d7328632"
            ],
            [
                "33c2007f97463dc0"
            ]
        ]
    },
    {
        "id": "718943fa9b2528fd",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"B6_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 3260,
        "wires": [
            [
                "a1e2aa94c3c78002"
            ]
        ]
    },
    {
        "id": "2c4ca08770eaccf1",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 620;   //you need to replace this value with Value_1\nvar verywet = 356;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3200,
        "wires": [
            [
                "718943fa9b2528fd"
            ]
        ]
    },
    {
        "id": "eee590d327c8ebbd",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 3140,
        "wires": [
            [
                "2c4ca08770eaccf1"
            ]
        ]
    },
    {
        "id": "3aca8b27ea744a28",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 3580,
        "wires": [
            [
                "7119b7ac0bb486e9"
            ]
        ]
    },
    {
        "id": "3ed1b11d92376a4a",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug C1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 3540,
        "wires": []
    },
    {
        "id": "43010c1688743fe1",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0014/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 3580,
        "wires": [
            [
                "e0f5640ead4a71ca",
                "a81f523f77a0fa6e"
            ]
        ]
    },
    {
        "id": "b424764f0b468df2",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0013/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 3580,
        "wires": [
            [
                "3ed1b11d92376a4a",
                "f369233c08e5686e"
            ]
        ]
    },
    {
        "id": "d5f0f32edc1c3d27",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "C1_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 3720,
        "wires": []
    },
    {
        "id": "e334c45717be8053",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "C1_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3480,
        "wires": []
    },
    {
        "id": "6cd4f673fc430c5e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "C1_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3520,
        "wires": []
    },
    {
        "id": "bf5bce8bde44f3ab",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "C1_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 3560,
        "wires": []
    },
    {
        "id": "eee9bd46289f0e60",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "C1_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3600,
        "wires": []
    },
    {
        "id": "05a906bcba8aa684",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "C1_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3640,
        "wires": []
    },
    {
        "id": "1709af8c66f202d0",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "C1_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3680,
        "wires": []
    },
    {
        "id": "7119b7ac0bb486e9",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 13",
        "func": "// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 632;   //you need to replace this value with Value_1\nvar verywet = 383;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg3, msg4, msg5, msg6, msg7, msg8, msg10];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 3580,
        "wires": [
            [
                "e334c45717be8053"
            ],
            [
                "6cd4f673fc430c5e"
            ],
            [
                "bf5bce8bde44f3ab"
            ],
            [
                "eee9bd46289f0e60"
            ],
            [
                "05a906bcba8aa684"
            ],
            [
                "1709af8c66f202d0"
            ],
            [
                "d5f0f32edc1c3d27"
            ]
        ]
    },
    {
        "id": "f5bb05dd6904cab7",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "C2_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1410,
        "y": 3720,
        "wires": []
    },
    {
        "id": "b2a5f9aaca88cd4d",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "C2_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 3480,
        "wires": []
    },
    {
        "id": "4287addd91e2d80e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "C2_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 3520,
        "wires": []
    },
    {
        "id": "ea97bc52bcd92417",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "C2_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 3560,
        "wires": []
    },
    {
        "id": "2526350cd5726829",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "C2_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 3600,
        "wires": []
    },
    {
        "id": "be341357b1c6400d",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "C2_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 3640,
        "wires": []
    },
    {
        "id": "d5b1b00d2f032e95",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "C2_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 3680,
        "wires": []
    },
    {
        "id": "f369233c08e5686e",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 3640,
        "wires": [
            [
                "b75d0678cbc3bbf7"
            ]
        ]
    },
    {
        "id": "b75d0678cbc3bbf7",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 632;   //you need to replace this value with Value_1\nvar verywet = 383;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 3700,
        "wires": [
            [
                "d34d08c9fa699465"
            ]
        ]
    },
    {
        "id": "d34d08c9fa699465",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"C1_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 3760,
        "wires": [
            [
                "444b8051548556cf"
            ]
        ]
    },
    {
        "id": "444b8051548556cf",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 3840,
        "wires": [
            [
                "beff5164be218173"
            ],
            [
                "f81a1460b4a3ee90"
            ]
        ]
    },
    {
        "id": "beff5164be218173",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 3820,
        "wires": [
            [
                "ec5bb35018150b87"
            ]
        ]
    },
    {
        "id": "f81a1460b4a3ee90",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 3860,
        "wires": [
            [
                "06c32cc4b5a4f162"
            ]
        ]
    },
    {
        "id": "48c8b4590de088a0",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 3840,
        "wires": [
            []
        ]
    },
    {
        "id": "06c32cc4b5a4f162",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 3860,
        "wires": [
            [
                "48c8b4590de088a0"
            ]
        ]
    },
    {
        "id": "ec5bb35018150b87",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 3820,
        "wires": [
            [
                "48c8b4590de088a0"
            ]
        ]
    },
    {
        "id": "407c1ffe1994b3f4",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 3580,
        "wires": [
            [
                "6c067ad5af1f12d0"
            ]
        ]
    },
    {
        "id": "a81f523f77a0fa6e",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug C2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 3540,
        "wires": []
    },
    {
        "id": "6c067ad5af1f12d0",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 14",
        "func": "// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 639;   //you need to replace this value with Value_1\nvar verywet = 394;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg3, msg4, msg5, msg6, msg7, msg8, msg10];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3580,
        "wires": [
            [
                "b2a5f9aaca88cd4d"
            ],
            [
                "4287addd91e2d80e"
            ],
            [
                "ea97bc52bcd92417"
            ],
            [
                "2526350cd5726829"
            ],
            [
                "be341357b1c6400d"
            ],
            [
                "d5b1b00d2f032e95"
            ],
            [
                "f5bb05dd6904cab7"
            ]
        ]
    },
    {
        "id": "3ccffbd83c462a27",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 3820,
        "wires": [
            [
                "4a6ac6b510edde5b"
            ]
        ]
    },
    {
        "id": "700643b3ebbfe0ab",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 3860,
        "wires": [
            [
                "8e0dbd30e6b057e1"
            ]
        ]
    },
    {
        "id": "b2a19813f4186541",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 3840,
        "wires": [
            []
        ]
    },
    {
        "id": "8e0dbd30e6b057e1",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 3860,
        "wires": [
            [
                "b2a19813f4186541"
            ]
        ]
    },
    {
        "id": "4a6ac6b510edde5b",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 3820,
        "wires": [
            [
                "b2a19813f4186541"
            ]
        ]
    },
    {
        "id": "d9f2811fb801d0b1",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 3840,
        "wires": [
            [
                "3ccffbd83c462a27"
            ],
            [
                "700643b3ebbfe0ab"
            ]
        ]
    },
    {
        "id": "4052ca9b8fddbc1d",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"C2_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 3760,
        "wires": [
            [
                "d9f2811fb801d0b1"
            ]
        ]
    },
    {
        "id": "95841482815bbf44",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 639;   //you need to replace this value with Value_1\nvar verywet = 394;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3700,
        "wires": [
            [
                "4052ca9b8fddbc1d"
            ]
        ]
    },
    {
        "id": "e0f5640ead4a71ca",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 3640,
        "wires": [
            [
                "95841482815bbf44"
            ]
        ]
    },
    {
        "id": "71109cbbc6a12e87",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 4040,
        "wires": [
            [
                "2fd6bd4fd6d2acf7"
            ]
        ]
    },
    {
        "id": "bb55184f8de9b39b",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug C3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 4000,
        "wires": []
    },
    {
        "id": "6e04a234efcb0c03",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0016/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 4040,
        "wires": [
            [
                "3f9a9c61160b7007",
                "3493612951976221"
            ]
        ]
    },
    {
        "id": "ea4dbeeea71737e9",
        "type": "mqtt in",
        "z": "0fda059129e02852",
        "name": "",
        "topic": "DLOS8/03FF0015/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "ca2a5d61d3d94a55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 4040,
        "wires": [
            [
                "bb55184f8de9b39b",
                "893d1e8847d72300"
            ]
        ]
    },
    {
        "id": "aab7e7abb31a36b3",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "C3_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 4180,
        "wires": []
    },
    {
        "id": "be0e3e967a8743aa",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "C3_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3940,
        "wires": []
    },
    {
        "id": "f4c9d6a428aa2025",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "C3_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 3980,
        "wires": []
    },
    {
        "id": "df6317dc88586412",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "C3_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 4020,
        "wires": []
    },
    {
        "id": "bcaba2a4cd84ba2f",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "C3_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 4060,
        "wires": []
    },
    {
        "id": "1121bbea1c210f34",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "C3_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 4100,
        "wires": []
    },
    {
        "id": "4e95f60cff3aac85",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "C3_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 4140,
        "wires": []
    },
    {
        "id": "2fd6bd4fd6d2acf7",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 15",
        "func": "// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 623;   //you need to replace this value with Value_1\nvar verywet = 356;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg3, msg4, msg5, msg6, msg7, msg8, msg10];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 4040,
        "wires": [
            [
                "be0e3e967a8743aa"
            ],
            [
                "f4c9d6a428aa2025"
            ],
            [
                "df6317dc88586412"
            ],
            [
                "bcaba2a4cd84ba2f"
            ],
            [
                "1121bbea1c210f34"
            ],
            [
                "4e95f60cff3aac85"
            ],
            [
                "aab7e7abb31a36b3"
            ]
        ]
    },
    {
        "id": "bbe9f2eb079bba42",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "humedad del suelo",
        "measurement": "C4_Humidade do Solo",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1410,
        "y": 4180,
        "wires": []
    },
    {
        "id": "87c3d1e3db55af36",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "rssi",
        "measurement": "C4_RSSI",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 3940,
        "wires": []
    },
    {
        "id": "cc891478c3a4f023",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "snr",
        "measurement": "C4_SNR",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1370,
        "y": 3980,
        "wires": []
    },
    {
        "id": "cdb98e99249992cb",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "bateria",
        "measurement": "C4_Bateria",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 4020,
        "wires": []
    },
    {
        "id": "a834ce6333d7007e",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 1",
        "measurement": "C4_Temperatura do solo 10cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 4060,
        "wires": []
    },
    {
        "id": "3ee1003facf4b549",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 2",
        "measurement": "C4_Temperatura do Solo 20cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 4100,
        "wires": []
    },
    {
        "id": "fd1a6fa5d1619b57",
        "type": "influxdb out",
        "z": "0fda059129e02852",
        "influxdb": "9e459d2cb4410329",
        "name": "temp 3",
        "measurement": "C4_Temperatura do Solo 30cm",
        "precision": "",
        "retentionPolicy": "",
        "database": "Nodos_M4H_C",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1380,
        "y": 4140,
        "wires": []
    },
    {
        "id": "893d1e8847d72300",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 4100,
        "wires": [
            [
                "b17c4a7cc3438afa"
            ]
        ]
    },
    {
        "id": "b17c4a7cc3438afa",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 623;   //you need to replace this value with Value_1\nvar verywet = 356;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 4160,
        "wires": [
            [
                "7cd9dda442026958"
            ]
        ]
    },
    {
        "id": "7cd9dda442026958",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"C3_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 4220,
        "wires": [
            [
                "c7e303e25a83a3bb"
            ]
        ]
    },
    {
        "id": "c7e303e25a83a3bb",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 4300,
        "wires": [
            [
                "9e9250fe533e7843"
            ],
            [
                "9908e4be07b47ce7"
            ]
        ]
    },
    {
        "id": "9e9250fe533e7843",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 4280,
        "wires": [
            [
                "bbca62b19f2e0e79"
            ]
        ]
    },
    {
        "id": "9908e4be07b47ce7",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 4320,
        "wires": [
            [
                "748ce17c7f147ce2"
            ]
        ]
    },
    {
        "id": "1c5eb15a0d495d04",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "748ce17c7f147ce2",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 4320,
        "wires": [
            [
                "1c5eb15a0d495d04"
            ]
        ]
    },
    {
        "id": "bbca62b19f2e0e79",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 450,
        "y": 4280,
        "wires": [
            [
                "1c5eb15a0d495d04"
            ]
        ]
    },
    {
        "id": "6f6fd00e5b70125d",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 4040,
        "wires": [
            [
                "36d91c64b8b5badc"
            ]
        ]
    },
    {
        "id": "3493612951976221",
        "type": "debug",
        "z": "0fda059129e02852",
        "name": "debug C4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 4000,
        "wires": []
    },
    {
        "id": "36d91c64b8b5badc",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "function 16",
        "func": "// @ts-ignore\nmsg3 = {};\n// @ts-ignore\nmsg4 = {};\n// @ts-ignore\nmsg5 = {};\n// @ts-ignore\nmsg6 = {};\n// @ts-ignore\nmsg7 = {};\n// @ts-ignore\nmsg8 = {};\n// @ts-ignore\nmsg10 = {};\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 629;   //you need to replace this value with Value_1\nvar verywet = 363;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\n//---- Asignación de las salidas ----\nmsg3.payload = msg.payload.RSSI;\nmsg4.payload = msg.payload.SNR;\nmsg5.payload = bateria; //bateria\nmsg6.payload = msg.payload.zz; //temp suelo 1\nmsg7.payload = msg.payload.zx; //temp suelo 2\nmsg8.payload = msg.payload.zc; //temp suelo 3\nmsg10.payload = humedad; //hum suelo\n\n\nreturn [msg3, msg4, msg5, msg6, msg7, msg8, msg10];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 4040,
        "wires": [
            [
                "87c3d1e3db55af36"
            ],
            [
                "cc891478c3a4f023"
            ],
            [
                "cdb98e99249992cb"
            ],
            [
                "a834ce6333d7007e"
            ],
            [
                "3ee1003facf4b549"
            ],
            [
                "fd1a6fa5d1619b57"
            ],
            [
                "bbe9f2eb079bba42"
            ]
        ]
    },
    {
        "id": "9acec9bfb05c1347",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 4280,
        "wires": [
            [
                "7cfabaf41a34ea14"
            ]
        ]
    },
    {
        "id": "43ce4090b15ae57d",
        "type": "change",
        "z": "0fda059129e02852",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 4320,
        "wires": [
            [
                "95c7030c68c66efb"
            ]
        ]
    },
    {
        "id": "0b609d7afe933be0",
        "type": "file",
        "z": "0fda059129e02852",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "95c7030c68c66efb",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 4320,
        "wires": [
            [
                "0b609d7afe933be0"
            ]
        ]
    },
    {
        "id": "7cfabaf41a34ea14",
        "type": "csv",
        "z": "0fda059129e02852",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Hora,Temperatura do Solo 10cm (ºC),Temperatura do Solo 20cm (ºC), Temperatura do Solo 30cm (ºC),Humidade do Solo (%),Bateria (%)",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 4280,
        "wires": [
            [
                "0b609d7afe933be0"
            ]
        ]
    },
    {
        "id": "990bad3082f95df0",
        "type": "switch",
        "z": "0fda059129e02852",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 4300,
        "wires": [
            [
                "9acec9bfb05c1347"
            ],
            [
                "43ce4090b15ae57d"
            ]
        ]
    },
    {
        "id": "047d1ad7cfa9c1ad",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"C4_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/Users/Mariano/Desktop/Man4Health/Nos/\"+ msg.fname;\n//msg.filename = \"/home/pi/datalog/\" + msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 4220,
        "wires": [
            [
                "990bad3082f95df0"
            ]
        ]
    },
    {
        "id": "a1274d0a705aa606",
        "type": "function",
        "z": "0fda059129e02852",
        "name": "Splitter",
        "func": "var temp_10cm = msg.payload.zz;\nvar temp_20cm = msg.payload.zx;\nvar temp_30cm = msg.payload.zc;\nvar now = new Date();\n\nvar horas = now.getHours();\nvar minutos = now.getMinutes();\nvar mes = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dia = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar anio = now.getFullYear();\n\nif (minutos < 10)\n    var tiempo = horas + \":0\" + minutos;\nelse\n    var tiempo = horas + \":\" + minutos;\n\n\nvar fecha = dia + \"/\" + mes + \"/\" + anio;\n\n//---- Cálculo de porcentaje de batería ----\nvar a = msg.payload.cd;\n\nvar num = parseFloat(a);\nvar b = num * 2 / 1023 * 3.3;\n\nvar porcentaje = b * 100 / 4.2;\n\nvar bateria = Math.trunc(porcentaje);\n\n//---- Cálculo de porcentaje de humedad ----\nvar dry = 629;   //you need to replace this value with Value_1\nvar verywet = 363;  //you need to replace this value with Value_2\n\nvar h = msg.payload.zv;\n\nvar humedad = (dry - h) * 100 / (dry - verywet);\n\nvar m = {\n    //'Data' : fecha,\n    'Hora': tiempo,\n    'Temperatura do Solo 10cm (ºC)': temp_10cm,\n    'Temperatura do Solo 20cm (ºC)' : temp_20cm,\n    'Temperatura do Solo 30cm (ºC)' : temp_30cm,\n    'Humidade do Solo (%)' : humedad,\n    'Bateria (%)' : bateria\n    };\n\nreturn { payload: m };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 4160,
        "wires": [
            [
                "047d1ad7cfa9c1ad"
            ]
        ]
    },
    {
        "id": "3f9a9c61160b7007",
        "type": "json",
        "z": "0fda059129e02852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 4100,
        "wires": [
            [
                "a1274d0a705aa606"
            ]
        ]
    },
    {
        "id": "ca2a5d61d3d94a55",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9e459d2cb4410329",
        "type": "influxdb",
        "hostname": "eu-central-1-1.aws.cloud2.influxdata.com",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "man4health",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.8-flux",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    }
]